// /prisma/schema.prisma ‚Äî –î–û–ë–ê–í–ò–¢–¨ –ü–û–õ–Ø (–µ—Å–ª–∏ –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã) –ò –í–´–ù–µ—Å—Ç–∏ URL –≤ .env
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                     Int         @id @default(autoincrement())
  email                  String      @unique
  password               String
  isAdmin                Boolean     @default(false)
  isGuest                Boolean     @default(true)        // NEW
  passwordResetToken     String?     @unique               // NEW
  passwordResetTokenExp  DateTime?                         // NEW
  userData               UserData?
  orders                 OrderData[]
  createdAt              DateTime    @default(now())
}

model UserData {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  orderId   Int
  name      String
  surname   String
  address   String
  phone     String
  createdAt DateTime @default(now())
}

enum OrderStatus {
  NEW
  PROCESSING
  SHIPPED
  DELIVERED
  COMPLETED
  CANCELED
  RETURNED
  NOT_DELIVERED
}

model OrderData {
  id         Int          @id @default(autoincrement())
  user       User         @relation(fields: [userId], references: [id])
  userId     Int
  orderItems Json
  address    String
  phone      String
  message    String
  createdAt  DateTime     @default(now())

  // üîΩ –ù–û–í–´–ï –ü–û–õ–Ø
  status     OrderStatus  @default(NEW)
  email      String?      @db.VarChar(255)
}

model Category {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  value         String         @unique
  h1            String?        @db.VarChar(255)
  contentHtml   String?        @db.Text
  image         String?        @db.VarChar(255)
  subcategories SubCategory[]
  products      Product[]
  createdAt     DateTime       @default(now())
}

model SubCategory {
  id           Int        @id @default(autoincrement())
  name         String
  value        String
  h1           String?    @db.VarChar(255)
  contentHtml  String?    @db.Text
  image        String?    @db.VarChar(255)
  category     Category   @relation(fields: [categoryId], references: [id])
  categoryId   Int
  products     Product[]
  createdAt    DateTime   @default(now())
  @@unique([categoryId, value])
  @@index([categoryId])
}

model Brand {
  id        Int       @id @default(autoincrement())
  name      String
  value     String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
}

model Product {
  id                 Int          @id @default(autoincrement())
  title              String
  description        String       @db.Text
  price              Float
  discountPercentage Float
  rating             Float
  stock              Int
  brand              String
  category           String
  subcategory        String
  thumbnail          String
  images             Json
  info               Json
  article            String?      @db.VarChar(64)
  content            String       @db.Text
  metaTitle          String?      @db.VarChar(255)
  metaDesc           String?      @db.VarChar(512)
  h1                 String?      @db.VarChar(255)
  titleLink          String       @default("") @unique
  banner             Boolean
  discounts          Boolean
  povsednevnaya      Boolean
  recommended        Boolean
  createdAt          DateTime     @default(now())
  categoryRel        Category?    @relation(fields: [categoryId], references: [id])
  categoryId         Int?
  subCategoryRel     SubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId      Int?
  brandRel           Brand?       @relation(fields: [brandId], references: [id])
  brandId            Int?
  @@index([categoryId])
  @@index([subCategoryId])
  @@index([brandId])
  @@index([title])
  @@index([article])
  @@index([brand])
  @@index([category])
  @@index([subcategory])
}
